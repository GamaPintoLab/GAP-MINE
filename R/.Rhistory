module_scores
View(as.data.frame(module_scores))
modules_scores_df < as.data.frame(module_scores)
modules_scores_df <- as.data.frame(module_scores)
module_scores_df[is.na(modules_scores_df$module_scores)]
modules_scores_df[is.na(modules_scores_df$module_scores)]
modules_scores_df[is.nan(modules_scores_df$module_scores)]
modules_scores_df[is.nan(modules_scores_df$module_scores),]
modules_scores_df[,is.nan(modules_scores_df$module_scores)]
unique(modules_scores_df$module_scores)
View(rownames(kernel_scores_protein80))
length(rownames(kernel_scores_protein80))
V(protein80_graph)
protein80_df <- as.data.frame(protein80[1,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_graph <- graph_from_data_frame(protein80_df)
V(protein80_graph)
x <- V(protein80_graph)
x[x=='NA.1']
reactome_labels[rownames(kernel_scores_protein80),]
View(reactome_labels[rownames(kernel_scores_protein80),])
View(reactome_labels[rownames(kernel_scores_protein80),])
View(reactome_labels[rownames(kernel_scores_protein80),[1:2]])
View(reactome_labels[rownames(kernel_scores_protein80),1:2])
V(protein80_graph)$name
View(V(protein80_graph)$name)
V(protein80_graph)$name[12496:13496]
View(V(protein80_graph)$name)
rownames(protein80_graph)
rownames(kernel_scores_protein80)
rownames(kernel_scores_protein80)[12496:13496]
'NA.1' %in% rownames(kernel_scores_protein80)
'NA' %in% rownames(kernel_scores_protein80)
'NA' %in% rownames(reactome_labels)
'NA' %in% V(protein80_graph)$name
length(module_scores)
dim(kernel_scores_protein80)
library(diffuStats)
library(ropls)
library(igraph)
library(stringr)
library(reticulate)
source("oplsda_fs.R")
np <- import('numpy')
library(tidyr)
reactome_proteins_indexes <- read.csv('../python/data/processed/reactome_proteins_indexes_apid_huri.csv')
ppi_graph <- read_graph("../python/data/processed/graph_apid_huri", format='gml')
protein80 <- np$load("../python/data/processed/ppis/ppis_red_protein80_apid_huri.npy", allow_pickle = TRUE)
reactome_labels <- read.csv('../python/data/processed/reactome_labels_apid_huri.csv', header=FALSE)
reactome_labels_fp <- read.csv('../python/data/processed/reactome_labels_fp.csv', header=FALSE)
disgenet_labels <- read.csv('../python/data/processed/disgenet_filtered_labels_apid_huri.csv', header=FALSE)
disgenet_conservative_labels <- read.csv('../python/data/processed/disgenet_conservative_labels_apid_huri.csv', header=FALSE)
disgenet_labels_fp <- read.csv('../python/data/processed/disgenet_labels_fp.csv', header=FALSE)
disgenet_conservative_labels_fp <- read.csv('../python/data/processed/disgenet_conservative_labels_fp.csv', header=FALSE)
colnames(reactome_labels) <- reactome_proteins_indexes[['process']]
rownames(reactome_labels) <- V(ppi_graph)$name
rownames(reactome_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_labels) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels) <- V(ppi_graph)$name
rownames(disgenet_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels_fp) <- V(ppi_graph)$name
load("kernel1.Rda")
rm(adjacency_matrix)
rm(ppi_80)
length(rownames(kernel_scores_protein80))
protein80_df <- as.data.frame(protein80[1,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_graph <- graph_from_data_frame(protein80_df)
module_scores <- reactome_labels[V(protein80_graph)$name,1]
names(module_scores) <- rownames(reactome_labels[V(protein80_graph)$name,])
modules_scores_df <- as.data.frame(module_scores)
View(modules_scores_df)
View(protein80_df)
library(diffuStats)
library(ropls)
library(igraph)
library(stringr)
library(reticulate)
source("oplsda_fs.R")
np <- import('numpy')
library(tidyr)
reactome_proteins_indexes <- read.csv('../python/data/processed/reactome_proteins_indexes_apid_huri.csv')
ppi_graph <- read_graph("../python/data/processed/graph_apid_huri", format='gml')
protein80 <- np$load("../python/data/processed/ppis/ppis_red_protein80_apid_huri.npy", allow_pickle = TRUE)
reactome_labels <- read.csv('../python/data/processed/reactome_labels_apid_huri.csv', header=FALSE)
reactome_labels_fp <- read.csv('../python/data/processed/reactome_labels_fp.csv', header=FALSE)
disgenet_labels <- read.csv('../python/data/processed/disgenet_filtered_labels_apid_huri.csv', header=FALSE)
disgenet_conservative_labels <- read.csv('../python/data/processed/disgenet_conservative_labels_apid_huri.csv', header=FALSE)
disgenet_labels_fp <- read.csv('../python/data/processed/disgenet_labels_fp.csv', header=FALSE)
disgenet_conservative_labels_fp <- read.csv('../python/data/processed/disgenet_conservative_labels_fp.csv', header=FALSE)
colnames(reactome_labels) <- reactome_proteins_indexes[['process']]
rownames(reactome_labels) <- V(ppi_graph)$name
rownames(reactome_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_labels) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels) <- V(ppi_graph)$name
rownames(disgenet_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels_fp) <- V(ppi_graph)$name
protein80_df <- as.data.frame(protein80[1,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_graph <- graph_from_data_frame(protein80_df)
module_scores <- reactome_labels[V(protein80_graph)$name,1]
names(module_scores) <- rownames(reactome_labels[V(protein80_graph)$name,])
modules_scores_df <- as.data.frame(module_scores)
View(modules_scores_df)
protein80_df <- as.data.frame(protein80[1,,1:2])
protein80_df[protein80_df==0]<-NA
View(protein80_df)
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
View(protein80_df)
length(unique(protein80_df$V1))
length(unique(protein80_df$V2))
typeof(unique(protein80_df$V1))
length(union(unique(protein80_df$V1), unique(protein80_df$V2)))
match('NA', V(protein80_graph)$name)
View(reactome_labels)
x<-V(protein80_graph)$name
y <- reactome_labels[,1]
y[!y %in% x]
y[!(y %in% x)]
y <- rownames(reactome_labels)
y[!(y %in% x)]
length(y[!(y %in% x)])
length(y[(y %in% x)])
protein80_df <- as.data.frame(protein80[1,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
y[!(y %in% x)]
x[!(x %in% y)]
View(protein80[1,,])
protein80_df <- protein80_df[!(protein80_df$V1 %in% rownames(reactome_labels)) & !(protein80_df$V2 %in% rownames(reactome_labels))]
protein80_df <- protein80_df[!(protein80_df$V1 %in% rownames(reactome_labels)) & !(protein80_df$V2 %in% rownames(reactome_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
length(V(protein80_graph)$name)
protein80_df <- as.data.frame(protein80[1,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(reactome_labels)) & (protein80_df$V2 %in% rownames(reactome_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
length(V(protein80_graph)$name)
library(diffuStats)
library(igraph)
library(reticulate)
source("oplsda_fs.R")
np <- import('numpy')
reactome_proteins_indexes <- read.csv('../python/data/processed/reactome_proteins_indexes_apid_huri.csv')
ppi_graph <- read_graph("../python/data/processed/graph_apid_huri", format='gml')
protein80 <- np$load("../python/data/processed/ppis/ppis_red_protein80_apid_huri.npy", allow_pickle = TRUE)
reactome_labels <- read.csv('../python/data/processed/reactome_labels_apid_huri.csv', header=FALSE)
reactome_labels_fp <- read.csv('../python/data/processed/reactome_labels_fp.csv', header=FALSE)
disgenet_labels <- read.csv('../python/data/processed/disgenet_filtered_labels_apid_huri.csv', header=FALSE)
disgenet_conservative_labels <- read.csv('../python/data/processed/disgenet_conservative_labels_apid_huri.csv', header=FALSE)
disgenet_labels_fp <- read.csv('../python/data/processed/disgenet_labels_fp.csv', header=FALSE)
disgenet_conservative_labels_fp <- read.csv('../python/data/processed/disgenet_conservative_labels_fp.csv', header=FALSE)
colnames(reactome_labels) <- reactome_proteins_indexes[['process']]
rownames(reactome_labels) <- V(ppi_graph)$name
rownames(reactome_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_labels) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels) <- V(ppi_graph)$name
rownames(disgenet_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels_fp) <- V(ppi_graph)$name
for(i in 1:dim(protein80)[1]){
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(reactome_labels)) & (protein80_df$V2 %in% rownames(reactome_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
kernel_scores_protein80 <- regularisedLaplacianKernel(protein80_graph)
save(kernel_scores_protein80 ,paste("kernel", i,'.Rda', sep=""))
}
for(i in 1:dim(protein80)[1]){
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(reactome_labels)) & (protein80_df$V2 %in% rownames(reactome_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df, directed = FALSE)
kernel_scores_protein80 <- regularisedLaplacianKernel(protein80_graph)
save(kernel_scores_protein80 ,paste("kernel", i,'.Rda', sep=""))
}
for(i in 1:dim(protein80)[1]){
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(reactome_labels)) & (protein80_df$V2 %in% rownames(reactome_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df, directed = FALSE)
kernel_scores_protein80 <- regularisedLaplacianKernel(protein80_graph)
file_ <- paste("kernel", i,'.Rda', sep="")
save(kernel_scores_protein80, file=file_)
}
library(diffuStats)
library(igraph)
reactome_proteins_indexes <- read.csv('../python/data/processed/reactome_proteins_indexes_apid_huri.csv')
ppi_graph <- read_graph("../python/data/processed/graph_apid_huri", format='gml')
protein80 <- np$load("../python/data/processed/ppis/ppis_red_protein80_apid_huri.npy", allow_pickle = TRUE)
reactome_labels <- read.csv('../python/data/processed/reactome_labels_apid_huri.csv', header=FALSE)
reactome_labels_fp <- read.csv('../python/data/processed/reactome_labels_fp.csv', header=FALSE)
disgenet_labels <- read.csv('../python/data/processed/disgenet_filtered_labels_apid_huri.csv', header=FALSE)
disgenet_conservative_labels <- read.csv('../python/data/processed/disgenet_conservative_labels_apid_huri.csv', header=FALSE)
disgenet_labels_fp <- read.csv('../python/data/processed/disgenet_labels_fp.csv', header=FALSE)
disgenet_conservative_labels_fp <- read.csv('../python/data/processed/disgenet_conservative_labels_fp.csv', header=FALSE)
colnames(reactome_labels) <- reactome_proteins_indexes[['process']]
rownames(reactome_labels) <- V(ppi_graph)$name
rownames(reactome_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_labels) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels) <- V(ppi_graph)$name
rownames(disgenet_labels_fp) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels_fp) <- V(ppi_graph)$name
for (i in 1:10){
file_ <- paste("kernel", i,'.Rda', sep="")
kernel_1 <- load(file_)
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(reactome_labels)) & (protein80_df$V2 %in% rownames(reactome_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
reactome_protein80_scores <- matrix(0,dim(reactome_labels)[2] , length(V(protein80_graph)$name))
colnames(reactome_protein80_scores) <- V(protein80_graph)$name
for(j in 1:length(reactome_proteins_indexes[['process']])){
module_scores <- reactome_labels[rownames(kernel_scores_protein80),j]
names(module_scores) <- rownames(reactome_labels[rownames(kernel_scores_protein80),])
df_diff <- diffuse_grid(graph=protein80_graph,
K = kernel_scores_protein80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
reactome_protein80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/reactome_protein80_", i, ".csv", sep="")
write.csv(t(reactome_protein80_scores),file_destination, row.names = FALSE)
}
for (i in 1:10){
file_ <- paste("kernel", i,'.Rda', sep="")
kernel_1 <- load(file_)
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(disgenet_labels)) & (protein80_df$V2 %in% rownames(disgenet_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
disgenet_protein80_scores <- matrix(0,dim(disgenet_labels)[2] , length(V(protein80_graph)$name))
colnames(reactome_protein80_scores) <- V(protein80_graph)$name
for(j in 1:dim(disgenet_labels)[2]){
module_scores <- disgenet_labels[rownames(kernel_scores_protein80),j]
names(module_scores) <- rownames(disgenet_labels[rownames(kernel_scores_protein80),])
df_diff <- diffuse_grid(graph=protein80_graph,
K = kernel_scores_protein80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_protein80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_protein80_", i, ".csv", sep="")
write.csv(t(disgenet_protein80_scores),file_destination, row.names = FALSE)
}
for (i in 1:10){
file_ <- paste("kernel", i,'.Rda', sep="")
kernel_1 <- load(file_)
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(disgenet_conservative_labels)) & (protein80_df$V2 %in% rownames(disgenet_conservative_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
disgenet_conservative_protein80_scores <- matrix(0,dim(disgenet_conservative_labels)[2] , length(V(protein80_graph)$name))
colnames(reactome_protein80_scores) <- V(protein80_graph)$name
for(j in 1:dim(disgenet_conservative_labels)[2]){
module_scores <- disgenet_conservative_labels[rownames(kernel_scores_protein80),j]
names(module_scores) <- rownames(disgenet_conservative_labels[rownames(kernel_scores_protein80),])
df_diff <- diffuse_grid(graph=protein80_graph,
K = kernel_scores_protein80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_conservative_protein80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_conservative_protein80_", i, ".csv", sep="")
write.csv(t(disgenet_conservative_protein80_scores),file_destination, row.names = FALSE)
}
for (i in 1:10){
file_ <- paste("kernel", i,'.Rda', sep="")
kernel_1 <- load(file_)
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(disgenet_labels)) & (protein80_df$V2 %in% rownames(disgenet_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
disgenet_protein80_scores <- matrix(0,dim(disgenet_labels)[2] , length(V(protein80_graph)$name))
colnames(reactome_protein80_scores) <- V(protein80_graph)$name
for(j in 1:dim(disgenet_labels)[1]){
module_scores <- disgenet_labels[rownames(kernel_scores_protein80),j]
names(module_scores) <- rownames(disgenet_labels[rownames(kernel_scores_protein80),])
df_diff <- diffuse_grid(graph=protein80_graph,
K = kernel_scores_protein80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_protein80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_protein80_", i, ".csv", sep="")
write.csv(t(disgenet_protein80_scores),file_destination, row.names = FALSE)
}
dim(disgenet_labels)
for (i in 1:10){
file_ <- paste("kernel", i,'.Rda', sep="")
kernel_1 <- load(file_)
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(disgenet_labels)) & (protein80_df$V2 %in% rownames(disgenet_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
disgenet_protein80_scores <- matrix(0,dim(disgenet_labels)[2] , length(V(protein80_graph)$name))
colnames(disgenet_protein80_scores) <- V(protein80_graph)$name
for(j in 1:dim(disgenet_labels)[1]){
module_scores <- disgenet_labels[rownames(kernel_scores_protein80),j]
names(module_scores) <- rownames(disgenet_labels[rownames(kernel_scores_protein80),])
df_diff <- diffuse_grid(graph=protein80_graph,
K = kernel_scores_protein80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_protein80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_protein80_", i, ".csv", sep="")
write.csv(t(disgenet_protein80_scores),file_destination, row.names = FALSE)
}
dim(disgenet_labels)
for (i in 1:10){
file_ <- paste("kernel", i,'.Rda', sep="")
kernel_1 <- load(file_)
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(disgenet_labels)) & (protein80_df$V2 %in% rownames(disgenet_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
disgenet_protein80_scores <- matrix(0,dim(disgenet_labels)[2] , length(V(protein80_graph)$name))
colnames(disgenet_protein80_scores) <- V(protein80_graph)$name
for(j in 1:dim(disgenet_labels)[2]){
module_scores <- disgenet_labels[rownames(kernel_scores_protein80),j]
names(module_scores) <- rownames(disgenet_labels[rownames(kernel_scores_protein80),])
df_diff <- diffuse_grid(graph=protein80_graph,
K = kernel_scores_protein80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_protein80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_protein80_", i, ".csv", sep="")
write.csv(t(disgenet_protein80_scores),file_destination, row.names = FALSE)
}
for (i in 1:10){
file_ <- paste("kernel", i,'.Rda', sep="")
kernel_1 <- load(file_)
protein80_df <- as.data.frame(protein80[i,,1:2])
protein80_df[protein80_df==0]<-NA
protein80_df <- protein80_df[!is.na(protein80_df$V1) & !is.na(protein80_df$V2),]
protein80_df <- protein80_df[(protein80_df$V1 %in% rownames(disgenet_conservative_labels)) & (protein80_df$V2 %in% rownames(disgenet_conservative_labels)),]
protein80_graph <- graph_from_data_frame(protein80_df)
disgenet_conservative_protein80_scores <- matrix(0,dim(disgenet_conservative_labels)[2] , length(V(protein80_graph)$name))
colnames(disgenet_conservative_protein80_scores) <- V(protein80_graph)$name
for(j in 1:dim(disgenet_conservative_labels)[2]){
module_scores <- disgenet_conservative_labels[rownames(kernel_scores_protein80),j]
names(module_scores) <- rownames(disgenet_conservative_labels[rownames(kernel_scores_protein80),])
df_diff <- diffuse_grid(graph=protein80_graph,
K = kernel_scores_protein80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_conservative_protein80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_conservative_protein80_", i, ".csv", sep="")
write.csv(t(disgenet_conservative_protein80_scores),file_destination, row.names = FALSE)
}
library(ropls)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ropls")
library(ropls)
library(doPararell)
library(doPararel)
library(foreach)
library(caret)
install.packages("caret")
library(caret)
install.packages('caret', dependencies = TRUE)
library(caret)
ppi_80 <- np$load("../python/data/processed/ppis/ppis_red80_apid_huri.npy", allow_pickle = TRUE)
for(i in 1:dim(ppi_80)[1]){
ppi80_df <- as.data.frame(ppi_80[i,,1:2])
ppi80_df[ppi80_df==0]<-NA
ppi80_df <- ppi80_df[!is.na(ppi80_df$V1) & !is.na(ppi80_df$V2),]
ppi80_df <- ppi80_df[(ppi80_df$V1 %in% rownames(reactome_labels)) & (ppi80_df$V2 %in% rownames(reactome_labels)),]
ppi80_graph <- graph_from_data_frame(ppi80_df)
kernel_scores_ppi80 <- regularisedLaplacianKernel(ppi80_graph)
save(kernel_scores_ppi80 ,paste("kernel_ppi80_", i,'.Rda', sep=""))
}
for(i in 1:dim(ppi_80)[1]){
ppi80_df <- as.data.frame(ppi_80[i,,1:2])
ppi80_df[ppi80_df==0]<-NA
ppi80_df <- ppi80_df[!is.na(ppi80_df$V1) & !is.na(ppi80_df$V2),]
ppi80_df <- ppi80_df[(ppi80_df$V1 %in% rownames(reactome_labels)) & (ppi80_df$V2 %in% rownames(reactome_labels)),]
ppi80_graph <- graph_from_data_frame(ppi80_df, directed = FALSE)
kernel_scores_ppi80 <- regularisedLaplacianKernel(ppi80_graph)
save(kernel_scores_ppi80 ,paste("kernel_ppi80_", i,'.Rda', sep=""))
}
for(i in 1:dim(ppi_80)[1]){
ppi80_df <- as.data.frame(ppi_80[i,,1:2])
ppi80_df[ppi80_df==0]<-NA
ppi80_df <- ppi80_df[!is.na(ppi80_df$V1) & !is.na(ppi80_df$V2),]
ppi80_df <- ppi80_df[(ppi80_df$V1 %in% rownames(reactome_labels)) & (ppi80_df$V2 %in% rownames(reactome_labels)),]
ppi80_graph <- graph_from_data_frame(ppi80_df, directed = FALSE)
kernel_scores_ppi80 <- regularisedLaplacianKernel(ppi80_graph)
save(kernel_scores_ppi80 ,file=paste("kernel_ppi80_", i,'.Rda', sep=""))
}
library(diffuStats)
library(ropls)
library(igraph)
reactome_proteins_indexes <- read.csv('../python/data/processed/reactome_proteins_indexes_apid_huri.csv')
ppi_80 <- np$load("../python/data/processed/ppis/ppis_red80_apid_huri.npy", allow_pickle = TRUE)
reactome_labels <- read.csv('../python/data/processed/reactome_labels_apid_huri.csv', header=FALSE)
disgenet_labels <- read.csv('../python/data/processed/disgenet_filtered_labels_apid_huri.csv', header=FALSE)
library(reticulate)
np <- import('numpy')
ppi_80 <- np$load("../python/data/processed/ppis/ppis_red80_apid_huri.npy", allow_pickle = TRUE)
reactome_labels <- read.csv('../python/data/processed/reactome_labels_apid_huri.csv', header=FALSE)
disgenet_labels <- read.csv('../python/data/processed/disgenet_filtered_labels_apid_huri.csv', header=FALSE)
disgenet_conservative_labels <- read.csv('../python/data/processed/disgenet_conservative_labels_apid_huri.csv', header=FALSE)
colnames(reactome_labels) <- reactome_proteins_indexes[['process']]
rownames(reactome_labels) <- V(ppi_graph)$name
rownames(disgenet_labels) <- V(ppi_graph)$name
rownames(disgenet_conservative_labels) <- V(ppi_graph)$name
for (i in 1:10){
file_ <- paste("kernel_ppi80_", i,'.Rda', sep="")
kernel_1 <- load(file_)
ppi80_df <- as.data.frame(ppi_80[i,,1:2])
ppi80_df[ppi80_df==0]<-NA
ppi80_df <- ppi80_df[!is.na(ppi80_df$V1) & !is.na(ppi80_df$V2),]
ppi80_df <- ppi80_df[(ppi80_df$V1 %in% rownames(reactome_labels)) & (ppi80_df$V2 %in% rownames(reactome_labels)),]
ppi80_graph <- graph_from_data_frame(ppi80_df)
reactome_ppi80_scores <- matrix(0,dim(reactome_labels)[2] , length(V(ppi80_graph)$name))
colnames(reactome_ppi80_scores) <- V(ppi80_graph)$name
for(j in 1:length(reactome_proteins_indexes[['process']])){
module_scores <- reactome_labels[rownames(kernel_scores_ppi80),j]
names(module_scores) <- rownames(reactome_labels[rownames(kernel_scores_ppi80),])
df_diff <- diffuse_grid(graph=ppi80_graph,
K = kernel_scores_ppi80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
reactome_ppi80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/reactome_ppi80_", i, ".csv", sep="")
write.csv(t(reactome_ppi80_scores),file_destination, row.names = FALSE)
}
View(protein80_df)
for (i in 1:10){
file_ <- paste("kernel_ppi80_", i,'.Rda', sep="")
kernel_1 <- load(file_)
ppi80_df <- as.data.frame(ppi_80[i,,1:2])
ppi80_df[ppi80_df==0]<-NA
ppi80_df <- ppi80_df[!is.na(ppi80_df$V1) & !is.na(ppi80_df$V2),]
ppi80_df <- ppi80_df[(ppi80_df$V1 %in% rownames(disgenet_labels)) & (ppi80_df$V2 %in% rownames(disgenet_labels)),]
ppi80_graph <- graph_from_data_frame(ppi80_df)
disgenet_ppi80_scores <- matrix(0,dim(disgenet_labels)[2] , length(V(ppi80_graph)$name))
colnames(disgenet_ppi80_scores) <- V(ppi80_graph)$name
for(j in 1:dim(disgenet_labels)[2]){
module_scores <- disgenet_labels[rownames(kernel_scores_ppi80),j]
names(module_scores) <- rownames(disgenet_labels[rownames(kernel_scores_ppi80),])
df_diff <- diffuse_grid(graph=ppi80_graph,
K = kernel_scores_ppi80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_ppi80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_ppi80_", i, ".csv", sep="")
write.csv(t(disgenet_ppi80_scores),file_destination, row.names = FALSE)
}
for (i in 1:10){
file_ <- paste("kernel_ppi80_", i,'.Rda', sep="")
kernel_1 <- load(file_)
ppi80_df <- as.data.frame(ppi_80[i,,1:2])
ppi80_df[ppi80_df==0]<-NA
ppi80_df <- ppi80_df[!is.na(ppi80_df$V1) & !is.na(ppi80_df$V2),]
ppi80_df <- ppi80_df[(ppi80_df$V1 %in% rownames(disgenet_conservative_labels)) & (ppi80_df$V2 %in% rownames(disgenet_conservative_labels)),]
ppi80_graph <- graph_from_data_frame(ppi80_df)
disgenet_conservative_ppi80_scores <- matrix(0,dim(disgenet_conservative_labels)[2] , length(V(ppi80_graph)$name))
colnames(disgenet_conservative_ppi80_scores) <- V(ppi80_graph)$name
for(j in 1:dim(disgenet_conservative_labels)[2]){
module_scores <- disgenet_conservative_labels[rownames(kernel_scores_ppi80),j]
names(module_scores) <- rownames(disgenet_conservative_labels[rownames(kernel_scores_ppi80),])
df_diff <- diffuse_grid(graph=ppi80_graph,
K = kernel_scores_ppi80,
scores = module_scores,
grid_param = expand.grid(method = c('raw')),
n.perm = 1000)
disgenet_conservative_ppi80_scores[j,] = df_diff$node_score
cat(sprintf("\"%f\" \"%f\"\n", i, j))
}
file_destination <- paste("../python/data/processed/metrics/disease_conservative_ppi80_", i, ".csv", sep="")
write.csv(t(disgenet_conservative_ppi80_scores),file_destination, row.names = FALSE)
}
library(doPararel)
library(doParallel)
